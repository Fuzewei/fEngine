// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

#include "KbeAgentBase.h"

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

namespace behaviac
{
///<<< BEGIN WRITING YOUR CODE NAMESPACE_INIT
	behaviac::EBTStatus _callPyFunc(KbeAgentBase* agent, behaviac::string funcName, PyObject* pArgs)
	{
		behaviac::EBTStatus ans = behaviac::EBTStatus::BT_FAILURE;
		Py_INCREF(agent->pEntity_);
		PyObject* pyCallable = PyObject_GetAttrString((PyObject*)agent->pEntity_, "onBhCallFunc");
		Py_DECREF(agent->pEntity_);
		if (!pyCallable)
		{
			return ans;
		}
		/*va_list arg_ptr;
		va_start(arg_ptr, funcName.length());
		PyObject* pArgs = PyTuple_New(funcName.length());
		for (size_t i = 0; i < funcName.length(); i++)
		{
			PyTuple_SetItem(pArgs, i, Py_BuildValue(funcName[i], ));
		}
		PyObject* funcArgs = Py_BuildValue(format.c_str(), 0);*/



		PyObject* pyResult = PyObject_CallFunction(pyCallable, const_cast<char*>("sO"), funcName.c_str(), pArgs);
		Py_DECREF(pyCallable);
		Py_DECREF(pArgs);

		if (pyResult)
		{
			ans = (behaviac::EBTStatus)PyLong_AsLong(pyResult);
			Py_DECREF(pyResult);
		}

		return ans;
	}

///<<< END WRITING YOUR CODE

	KbeAgentBase::KbeAgentBase()
	{
///<<< BEGIN WRITING YOUR CODE CONSTRUCTOR

///<<< END WRITING YOUR CODE
	}

	KbeAgentBase::~KbeAgentBase()
	{
///<<< BEGIN WRITING YOUR CODE DESTRUCTOR

///<<< END WRITING YOUR CODE
	}

	void KbeAgentBase::callPyFunc(behaviac::string funcName)
	{
///<<< BEGIN WRITING YOUR CODE callPyFunc
		_callPyFunc(this, funcName, Py_None);

		///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE NAMESPACE_UNINIT

///<<< END WRITING YOUR CODE
}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE
