// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_CUSTOMIZED_TYPES_H_
#define _BEHAVIAC_CUSTOMIZED_TYPES_H_

#include "behaviac/agent/agent.h"

// -------------------
// Customized structs
// -------------------

namespace behaviac
{
	struct EnemyInfo
	{
		int entityId;
		float dis;
	};
}

BEHAVIAC_EXTEND_EXISTING_TYPE_EX(behaviac::EnemyInfo, false);
BEHAVIAC_DECLARE_TYPE_VECTOR_HANDLER(behaviac::EnemyInfo);

template< typename SWAPPER >
inline void SwapByteImplement(behaviac::EnemyInfo& v)
{
	SwapByteImplement< SWAPPER >(v.entityId);
	SwapByteImplement< SWAPPER >(v.dis);
}

namespace behaviac
{
	namespace PrivateDetails
	{
		template<>
		inline bool Equal(const behaviac::EnemyInfo& lhs, const behaviac::EnemyInfo& rhs)
		{
			return Equal(lhs.entityId, rhs.entityId)
				&& Equal(lhs.dis, rhs.dis);
		}
	}
}

#endif // _BEHAVIAC_CUSTOMIZED_TYPES_H_
